{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nconst Search = () => {\n  _s();\n  const [authorName, setAuthorName] = useState('');\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Helper function to fetch article details\n  const fetchArticleDetails = async pmcid => {\n    const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n    const apiKey = 'a72e2410b259ec3b646175c1aa0e1f13eb08'; // Use your actual API key here\n    const detailsUrl = `https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=pmc&id=${pmcid}&api_key=${apiKey}`;\n    const apiUrl = proxyUrl + detailsUrl;\n    const response = await fetch(apiUrl);\n    const text = await response.text();\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(text, \"application/xml\");\n\n    // Assume that the article title and citation are contained within the XML response\n    const articleTitle = xmlDoc.querySelector(\"article-title\").textContent;\n    const citation = xmlDoc.querySelector(\"citation\").textContent;\n    return {\n      pmcid,\n      title: articleTitle,\n      citation,\n      downloadUrl: `https://www.ncbi.nlm.nih.gov/pmc/articles/PMC${pmcid}/pdf/`\n    };\n  };\n\n  // Function to initiate article search\n  const searchArticlesByAuthor = async () => {\n    setError('');\n    setLoading(true);\n    const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n    const query = encodeURIComponent(`${authorName.trim()}[AUTH]`);\n    const apiKey = 'your-api-key'; // Use your actual API key here\n    let fetchedArticles = [];\n    const fetchPage = async retstart => {\n      const searchUrl = `https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esearch.fcgi?db=pmc&term=${query}&retmax=20&retstart=${retstart}&usehistory=y&api_key=${apiKey}`;\n      const apiUrl = proxyUrl + searchUrl;\n      const response = await fetch(apiUrl);\n      const text = await response.text();\n      const parser = new DOMParser();\n      const xmlDoc = parser.parseFromString(text, \"application/xml\");\n      const ids = Array.from(xmlDoc.querySelectorAll('Id')).map(id => id.textContent);\n\n      // Fetch details for each article ID\n      for (const pmcid of ids) {\n        const details = await fetchArticleDetails(pmcid);\n        fetchedArticles.push(details);\n      }\n\n      // Check if there are more articles to fetch\n      if (ids.length === 20) {\n        await fetchPage(retstart + 20);\n      }\n    };\n    await fetchPage(0); // Start with the first page\n    setArticles(fetchedArticles);\n    setLoading(false);\n  };\n  const handleDownloadClick = async article => {\n    setLoading(true);\n    const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n    const response = await fetch(proxyUrl + article.downloadUrl);\n    if (!response.ok) {\n      setError(`Download failed: HTTP error! Status: ${response.status}`);\n      setLoading(false);\n      return;\n    }\n    const blob = await response.blob();\n    const url = window.URL.createObjectURL(new Blob([blob]));\n    const link = document.createElement('a');\n    link.href = url;\n    const fileName = `${article.title}-${article.citation}`.replace(/[/\\\\?%*:|\"<>]/g, '-'); // Sanitize the filename\n    link.setAttribute('download', `${fileName}.pdf`);\n    document.body.appendChild(link);\n    link.click();\n    link.parentNode.removeChild(link);\n    window.URL.revokeObjectURL(url);\n    setLoading(false);\n  };\n  const handleDownloadAllClick = () => {\n    articles.forEach((article, index) => {\n      setTimeout(() => {\n        handleDownloadClick(article);\n      }, index * 1000); // Set a delay to prevent rate limit issues\n    });\n  };\n\n  // JSX and styles for input, buttons, and list will remain the same...\n\n  // ... rest of your component's return statement and JSX ...\n};\n_s(Search, \"ThGhd6KQhp8TkEVnsN/0xD+4O/E=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","Search","_s","authorName","setAuthorName","articles","setArticles","loading","setLoading","error","setError","fetchArticleDetails","pmcid","proxyUrl","apiKey","detailsUrl","apiUrl","response","fetch","text","parser","DOMParser","xmlDoc","parseFromString","articleTitle","querySelector","textContent","citation","title","downloadUrl","searchArticlesByAuthor","query","encodeURIComponent","trim","fetchedArticles","fetchPage","retstart","searchUrl","ids","Array","from","querySelectorAll","map","id","details","push","length","handleDownloadClick","article","ok","status","blob","url","window","URL","createObjectURL","Blob","link","document","createElement","href","fileName","replace","setAttribute","body","appendChild","click","parentNode","removeChild","revokeObjectURL","handleDownloadAllClick","forEach","index","setTimeout","_c","$RefreshReg$"],"sources":["/Users/nikunhao/Desktop/PMC_Downloader/src/Search.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Search = () => {\n  const [authorName, setAuthorName] = useState('');\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Helper function to fetch article details\n  const fetchArticleDetails = async (pmcid) => {\n    const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n    const apiKey = 'a72e2410b259ec3b646175c1aa0e1f13eb08'; // Use your actual API key here\n    const detailsUrl = `https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=pmc&id=${pmcid}&api_key=${apiKey}`;\n    const apiUrl = proxyUrl + detailsUrl;\n\n    const response = await fetch(apiUrl);\n    const text = await response.text();\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(text, \"application/xml\");\n    \n    // Assume that the article title and citation are contained within the XML response\n    const articleTitle = xmlDoc.querySelector(\"article-title\").textContent;\n    const citation = xmlDoc.querySelector(\"citation\").textContent;\n\n    return {\n      pmcid,\n      title: articleTitle,\n      citation,\n      downloadUrl: `https://www.ncbi.nlm.nih.gov/pmc/articles/PMC${pmcid}/pdf/`\n    };\n  };\n\n  // Function to initiate article search\n  const searchArticlesByAuthor = async () => {\n    setError('');\n    setLoading(true);\n\n    const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n    const query = encodeURIComponent(`${authorName.trim()}[AUTH]`);\n    const apiKey = 'your-api-key'; // Use your actual API key here\n    let fetchedArticles = [];\n\n    const fetchPage = async (retstart) => {\n      const searchUrl = `https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esearch.fcgi?db=pmc&term=${query}&retmax=20&retstart=${retstart}&usehistory=y&api_key=${apiKey}`;\n      const apiUrl = proxyUrl + searchUrl;\n      const response = await fetch(apiUrl);\n      const text = await response.text();\n      const parser = new DOMParser();\n      const xmlDoc = parser.parseFromString(text, \"application/xml\");\n      const ids = Array.from(xmlDoc.querySelectorAll('Id')).map(id => id.textContent);\n\n      // Fetch details for each article ID\n      for (const pmcid of ids) {\n        const details = await fetchArticleDetails(pmcid);\n        fetchedArticles.push(details);\n      }\n\n      // Check if there are more articles to fetch\n      if (ids.length === 20) {\n        await fetchPage(retstart + 20);\n      }\n    };\n\n    await fetchPage(0); // Start with the first page\n    setArticles(fetchedArticles);\n    setLoading(false);\n  };\n\n  const handleDownloadClick = async (article) => {\n    setLoading(true);\n    const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n    const response = await fetch(proxyUrl + article.downloadUrl);\n\n    if (!response.ok) {\n      setError(`Download failed: HTTP error! Status: ${response.status}`);\n      setLoading(false);\n      return;\n    }\n\n    const blob = await response.blob();\n    const url = window.URL.createObjectURL(new Blob([blob]));\n    const link = document.createElement('a');\n    link.href = url;\n    const fileName = `${article.title}-${article.citation}`.replace(/[/\\\\?%*:|\"<>]/g, '-'); // Sanitize the filename\n    link.setAttribute('download', `${fileName}.pdf`);\n    document.body.appendChild(link);\n    link.click();\n    link.parentNode.removeChild(link);\n    window.URL.revokeObjectURL(url);\n    setLoading(false);\n  };\n\n  const handleDownloadAllClick = () => {\n    articles.forEach((article, index) => {\n      setTimeout(() => {\n        handleDownloadClick(article);\n      }, index * 1000); // Set a delay to prevent rate limit issues\n    });\n  };\n\n  // JSX and styles for input, buttons, and list will remain the same...\n\n  // ... rest of your component's return statement and JSX ...\n};\n\nexport default Search;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}